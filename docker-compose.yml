version: '3.8'

services:
  redis:
    image: redis:alpine
    restart: always
    env_file:
      - .env
    command: redis-server --requirepass $REDIS_PASSWORD --bind 0.0.0.0
    networks:
      - dev
    # ports:
    #   - "6379:6379"

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: cars
      POSTGRES_USER: root
      POSTGRES_PASSWORD: adminroot
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - dev

  nginx:
    image: nginx:stable-alpine
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - './static:/var/www/static' 
    depends_on:
      - backend 
      - redis
    networks:
      - dev


  backend: 
    build: . 
    command: >
      sh -c "
        python manage.py runbot &&
        sleep 2 &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        celery -A core worker -l info -P prefork &
        celery -A core beat -l info &
        celery -A core flower -l info &
        gunicorn core.wsgi:application --bind 0.0.0.0:8000 --timeout 300 &&
        wait
      "
    ports: 
      - "8000:8000"
      - "5555:5555"
    volumes:
      - './db:/db'
      - './logs:/logs'
      - ./static:/var/www/static
    depends_on:
      - redis
      - postgres
    env_file:
      - .env
    networks:
      - dev

volumes:
  pgdata:

networks:
  dev: